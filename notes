
db record format:
. md5sum -- for both:
.. filename
.. uniqueness
. label name 
. coordinates
. altitude
. date/time
. width/height

import steps:
1) prompt for label name for
imported files (ie, '2015 vacation')

2) read files
. md5sum compare against DB entries
 ( and file system ?? ) 
. if unique:
.. copy file with md5sum name
into directory... 
.... if copy successful:

3) put as much of above info as possible
into db
... if you can't read any of it, store only
	the file name (md5sum)
... if db entry NOT successful:
..... delete file


--------------
keeping map and list in sync:
. not ever item in list has pin
. every pin has an item in list

when list item clicked:
. set pin center of map
.. animate?
. change zoom level ?
.. animate?
. change pin color
. set active color on list item
. set previously selected item to gray

when pin clicked
. change pin color
. set active color on list item
. set previously selected item to gray

-----------------
import country geojson
### first have to strip off "featureCollection" tag, then wrap entire file in array brackets:
mongoimport --drop --db geo --collection geo --type json --file countries.geojson --jsonArray
# find in Mongo client:
db.geo.findOne({'properties.admin': 'Italy'})

# scratch:
var monk = require('monk');

var photoDb = monk('localhost:27017/photo_mapper');
var photoCol = photoDb.get('photo_mapper');
var photos = [];

var geoDb = monk('localhost:27017/geo');
var geoCol = geoDb.get('geo');
var countries = [];

photoCol.find({}, function(e,docs){
	docs.forEach(function(i) { 
		console.log(i);
		if (i.longitude && i.latitude) {
			photos.push({
			"type": "Point",
	  		"coordinates": [
	    		i.longitude,  
	    		i.latitude 
	 		]}); 
		}
	});
});

geoCol.find({}, function(e, docs) {
	
});


var point = {
  "type": "Point",
  "coordinates": [
    longitude,  
    latitude 
  ]
};

